'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _viewportMercatorProject = require('viewport-mercator-project');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  redraw: _propTypes2.default.func.isRequired,
  style: _propTypes2.default.object
}; // Copyright (c) 2015 Uber Technologies, Inc.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var contextTypes = {
  viewport: _propTypes2.default.instanceOf(_viewportMercatorProject.PerspectiveMercatorViewport),
  isDragging: _propTypes2.default.bool
};

var SVGOverlay = function (_Component) {
  (0, _inherits3.default)(SVGOverlay, _Component);

  function SVGOverlay() {
    (0, _classCallCheck3.default)(this, SVGOverlay);
    return (0, _possibleConstructorReturn3.default)(this, (SVGOverlay.__proto__ || (0, _getPrototypeOf2.default)(SVGOverlay)).apply(this, arguments));
  }

  (0, _createClass3.default)(SVGOverlay, [{
    key: 'render',
    value: function render() {
      var _context = this.context,
          viewport = _context.viewport,
          isDragging = _context.isDragging;

      var style = (0, _assign2.default)({
        pointerEvents: 'none',
        position: 'absolute',
        left: 0,
        top: 0
      }, this.props.style);

      return (0, _react.createElement)('svg', {
        width: viewport.width,
        height: viewport.height,
        style: style
      }, this.props.redraw({
        width: viewport.width,
        height: viewport.height,
        isDragging: isDragging,
        project: viewport.project.bind(viewport),
        unproject: viewport.unproject.bind(viewport)
      }));
    }
  }]);
  return SVGOverlay;
}(_react.Component);

exports.default = SVGOverlay;


SVGOverlay.displayName = 'SVGOverlay';
SVGOverlay.propTypes = propTypes;
SVGOverlay.contextTypes = contextTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vdmVybGF5cy9zdmctb3ZlcmxheS5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJyZWRyYXciLCJmdW5jIiwiaXNSZXF1aXJlZCIsInN0eWxlIiwib2JqZWN0IiwiY29udGV4dFR5cGVzIiwidmlld3BvcnQiLCJpbnN0YW5jZU9mIiwiaXNEcmFnZ2luZyIsImJvb2wiLCJTVkdPdmVybGF5IiwiY29udGV4dCIsInBvaW50ZXJFdmVudHMiLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJwcm9wcyIsIndpZHRoIiwiaGVpZ2h0IiwicHJvamVjdCIsImJpbmQiLCJ1bnByb2plY3QiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBOztBQUNBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxZQUFZO0FBQ2hCQyxVQUFRLG9CQUFVQyxJQUFWLENBQWVDLFVBRFA7QUFFaEJDLFNBQU8sb0JBQVVDO0FBRkQsQ0FBbEIsQyxDQXhCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFXQSxJQUFNQyxlQUFlO0FBQ25CQyxZQUFVLG9CQUFVQyxVQUFWLHNEQURTO0FBRW5CQyxjQUFZLG9CQUFVQztBQUZILENBQXJCOztJQUtxQkMsVTs7Ozs7Ozs7Ozs2QkFDVjtBQUFBLHFCQUN3QixLQUFLQyxPQUQ3QjtBQUFBLFVBQ0FMLFFBREEsWUFDQUEsUUFEQTtBQUFBLFVBQ1VFLFVBRFYsWUFDVUEsVUFEVjs7QUFFUCxVQUFNTCxRQUFRLHNCQUFjO0FBQzFCUyx1QkFBZSxNQURXO0FBRTFCQyxrQkFBVSxVQUZnQjtBQUcxQkMsY0FBTSxDQUhvQjtBQUkxQkMsYUFBSztBQUpxQixPQUFkLEVBS1gsS0FBS0MsS0FBTCxDQUFXYixLQUxBLENBQWQ7O0FBT0EsYUFDRSwwQkFBYyxLQUFkLEVBQXFCO0FBQ25CYyxlQUFPWCxTQUFTVyxLQURHO0FBRW5CQyxnQkFBUVosU0FBU1ksTUFGRTtBQUduQmY7QUFIbUIsT0FBckIsRUFLRSxLQUFLYSxLQUFMLENBQVdoQixNQUFYLENBQWtCO0FBQ2hCaUIsZUFBT1gsU0FBU1csS0FEQTtBQUVoQkMsZ0JBQVFaLFNBQVNZLE1BRkQ7QUFHaEJWLDhCQUhnQjtBQUloQlcsaUJBQVNiLFNBQVNhLE9BQVQsQ0FBaUJDLElBQWpCLENBQXNCZCxRQUF0QixDQUpPO0FBS2hCZSxtQkFBV2YsU0FBU2UsU0FBVCxDQUFtQkQsSUFBbkIsQ0FBd0JkLFFBQXhCO0FBTEssT0FBbEIsQ0FMRixDQURGO0FBZUQ7Ozs7O2tCQXpCa0JJLFU7OztBQTRCckJBLFdBQVdZLFdBQVgsR0FBeUIsWUFBekI7QUFDQVosV0FBV1gsU0FBWCxHQUF1QkEsU0FBdkI7QUFDQVcsV0FBV0wsWUFBWCxHQUEwQkEsWUFBMUIiLCJmaWxlIjoic3ZnLW92ZXJsYXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cblxuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQge0NvbXBvbmVudCwgY3JlYXRlRWxlbWVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7UGVyc3BlY3RpdmVNZXJjYXRvclZpZXdwb3J0fSBmcm9tICd2aWV3cG9ydC1tZXJjYXRvci1wcm9qZWN0JztcblxuY29uc3QgcHJvcFR5cGVzID0ge1xuICByZWRyYXc6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5jb25zdCBjb250ZXh0VHlwZXMgPSB7XG4gIHZpZXdwb3J0OiBQcm9wVHlwZXMuaW5zdGFuY2VPZihQZXJzcGVjdGl2ZU1lcmNhdG9yVmlld3BvcnQpLFxuICBpc0RyYWdnaW5nOiBQcm9wVHlwZXMuYm9vbFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU1ZHT3ZlcmxheSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7dmlld3BvcnQsIGlzRHJhZ2dpbmd9ID0gdGhpcy5jb250ZXh0O1xuICAgIGNvbnN0IHN0eWxlID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICB0b3A6IDBcbiAgICB9LCB0aGlzLnByb3BzLnN0eWxlKTtcblxuICAgIHJldHVybiAoXG4gICAgICBjcmVhdGVFbGVtZW50KCdzdmcnLCB7XG4gICAgICAgIHdpZHRoOiB2aWV3cG9ydC53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiB2aWV3cG9ydC5oZWlnaHQsXG4gICAgICAgIHN0eWxlXG4gICAgICB9LFxuICAgICAgICB0aGlzLnByb3BzLnJlZHJhdyh7XG4gICAgICAgICAgd2lkdGg6IHZpZXdwb3J0LndpZHRoLFxuICAgICAgICAgIGhlaWdodDogdmlld3BvcnQuaGVpZ2h0LFxuICAgICAgICAgIGlzRHJhZ2dpbmcsXG4gICAgICAgICAgcHJvamVjdDogdmlld3BvcnQucHJvamVjdC5iaW5kKHZpZXdwb3J0KSxcbiAgICAgICAgICB1bnByb2plY3Q6IHZpZXdwb3J0LnVucHJvamVjdC5iaW5kKHZpZXdwb3J0KVxuICAgICAgICB9KVxuICAgICAgKVxuICAgICk7XG4gIH1cbn1cblxuU1ZHT3ZlcmxheS5kaXNwbGF5TmFtZSA9ICdTVkdPdmVybGF5JztcblNWR092ZXJsYXkucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuU1ZHT3ZlcmxheS5jb250ZXh0VHlwZXMgPSBjb250ZXh0VHlwZXM7XG4iXX0=