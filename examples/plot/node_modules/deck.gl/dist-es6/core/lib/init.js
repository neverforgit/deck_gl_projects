// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

import { global } from '../utils/globals';
import log from '../utils/log';

// Version detection
// TODO - this imports a rather large JSON file, we only need one field
import { version } from '../../../package.json';

var STARTUP_MESSAGE = 'set deck.log.priority=1 (or higher) to trace attribute updates';

if (global.deck && global.deck.VERSION !== version) {
  throw new Error('deck.gl - multiple versions detected: ' + global.deck.VERSION + ' vs ' + version);
}

if (!global.deck) {
  /* global console */
  /* eslint-disable no-console */
  console.log('deck.gl ' + version + ' - ' + STARTUP_MESSAGE);

  global.deck = global.deck || {
    VERSION: version,
    log: log
  };
}

// TODO - Hack, remove when luma.gl 4.1.0-alpha.5 is published
if (!console.table) {
  console.table = function () {};
}

// Make sure we register shader modules
require('../shaderlib');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL2xpYi9pbml0LmpzIl0sIm5hbWVzIjpbImdsb2JhbCIsImxvZyIsInZlcnNpb24iLCJTVEFSVFVQX01FU1NBR0UiLCJkZWNrIiwiVkVSU0lPTiIsIkVycm9yIiwiY29uc29sZSIsInRhYmxlIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUUEsTUFBUixRQUFxQixrQkFBckI7QUFDQSxPQUFPQyxHQUFQLE1BQWdCLGNBQWhCOztBQUVBO0FBQ0E7QUFDQSxTQUFRQyxPQUFSLFFBQXNCLHVCQUF0Qjs7QUFFQSxJQUFNQyxrQkFBa0IsZ0VBQXhCOztBQUVBLElBQUlILE9BQU9JLElBQVAsSUFBZUosT0FBT0ksSUFBUCxDQUFZQyxPQUFaLEtBQXdCSCxPQUEzQyxFQUFvRDtBQUNsRCxRQUFNLElBQUlJLEtBQUosNENBQW1ETixPQUFPSSxJQUFQLENBQVlDLE9BQS9ELFlBQTZFSCxPQUE3RSxDQUFOO0FBQ0Q7O0FBRUQsSUFBSSxDQUFDRixPQUFPSSxJQUFaLEVBQWtCO0FBQ2hCO0FBQ0E7QUFDQUcsVUFBUU4sR0FBUixjQUF1QkMsT0FBdkIsV0FBb0NDLGVBQXBDOztBQUVBSCxTQUFPSSxJQUFQLEdBQWNKLE9BQU9JLElBQVAsSUFBZTtBQUMzQkMsYUFBU0gsT0FEa0I7QUFFM0JEO0FBRjJCLEdBQTdCO0FBSUQ7O0FBRUQ7QUFDQSxJQUFJLENBQUNNLFFBQVFDLEtBQWIsRUFBb0I7QUFDbEJELFVBQVFDLEtBQVIsR0FBZ0IsWUFBTSxDQUFFLENBQXhCO0FBQ0Q7O0FBRUQ7QUFDQUMsUUFBUSxjQUFSIiwiZmlsZSI6ImluaXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtnbG9iYWx9IGZyb20gJy4uL3V0aWxzL2dsb2JhbHMnO1xuaW1wb3J0IGxvZyBmcm9tICcuLi91dGlscy9sb2cnO1xuXG4vLyBWZXJzaW9uIGRldGVjdGlvblxuLy8gVE9ETyAtIHRoaXMgaW1wb3J0cyBhIHJhdGhlciBsYXJnZSBKU09OIGZpbGUsIHdlIG9ubHkgbmVlZCBvbmUgZmllbGRcbmltcG9ydCB7dmVyc2lvbn0gZnJvbSAnLi4vLi4vLi4vcGFja2FnZS5qc29uJztcblxuY29uc3QgU1RBUlRVUF9NRVNTQUdFID0gJ3NldCBkZWNrLmxvZy5wcmlvcml0eT0xIChvciBoaWdoZXIpIHRvIHRyYWNlIGF0dHJpYnV0ZSB1cGRhdGVzJztcblxuaWYgKGdsb2JhbC5kZWNrICYmIGdsb2JhbC5kZWNrLlZFUlNJT04gIT09IHZlcnNpb24pIHtcbiAgdGhyb3cgbmV3IEVycm9yKGBkZWNrLmdsIC0gbXVsdGlwbGUgdmVyc2lvbnMgZGV0ZWN0ZWQ6ICR7Z2xvYmFsLmRlY2suVkVSU0lPTn0gdnMgJHt2ZXJzaW9ufWApO1xufVxuXG5pZiAoIWdsb2JhbC5kZWNrKSB7XG4gIC8qIGdsb2JhbCBjb25zb2xlICovXG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgY29uc29sZS5sb2coYGRlY2suZ2wgJHt2ZXJzaW9ufSAtICR7U1RBUlRVUF9NRVNTQUdFfWApO1xuXG4gIGdsb2JhbC5kZWNrID0gZ2xvYmFsLmRlY2sgfHwge1xuICAgIFZFUlNJT046IHZlcnNpb24sXG4gICAgbG9nXG4gIH07XG59XG5cbi8vIFRPRE8gLSBIYWNrLCByZW1vdmUgd2hlbiBsdW1hLmdsIDQuMS4wLWFscGhhLjUgaXMgcHVibGlzaGVkXG5pZiAoIWNvbnNvbGUudGFibGUpIHtcbiAgY29uc29sZS50YWJsZSA9ICgpID0+IHt9O1xufVxuXG4vLyBNYWtlIHN1cmUgd2UgcmVnaXN0ZXIgc2hhZGVyIG1vZHVsZXNcbnJlcXVpcmUoJy4uL3NoYWRlcmxpYicpO1xuIl19