{"version":3,"sources":["../../src/utils/log.js"],"names":["cache","log","priority","table","console","arg","args","debug","info","once","warn","error","image","message","scale","window","img","Image","onload","logImage","bind","src","element","nodeName","toLowerCase","toDataURL","deprecated","oldUsage","newUsage","group","collapsed","groupCollapsed","groupEnd","width","height","imageUrl","replace","Math","floor","join","formatArrayValue","v","opts","maxElts","size","string","i","length","formatValue","terminator","EPSILON","isInteger","Array","isArray","ArrayBuffer","isView","Number","isFinite","String","abs","toFixed","toPrecision","decimal","indexOf","slice"],"mappings":"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","file":"log.js","sourcesContent":["/* eslint-disable no-console */\n/* global console, window, Image */\n\nconst cache = {};\n\nconst log = {\n  priority: 0,\n  table(priority, table) {\n    if (priority <= log.priority && table) {\n      console.table(table);\n    }\n  },\n  log(priority, arg, ...args) {\n    if (priority <= log.priority) {\n      console.debug(`luma.gl: ${arg}`, ...args);\n    }\n  },\n  info(priority, arg, ...args) {\n    if (priority <= log.priority) {\n      console.log(`luma.gl: ${arg}`, ...args);\n    }\n  },\n  once(priority, arg, ...args) {\n    if (!cache[arg]) {\n      log.log(priority, arg, ...args);\n    }\n    cache[arg] = true;\n  },\n  warn(arg, ...args) {\n    console.warn(`luma.gl: ${arg}`, ...args);\n    cache[arg] = true;\n  },\n  error(arg, ...args) {\n    console.error(`luma.gl: ${arg}`, ...args);\n  },\n  image({priority, image, message = '', scale = 1}) {\n    if (priority > log.priority) {\n      return;\n    }\n    if (typeof window === 'undefined') { // Let's not try this under node\n      return;\n    }\n    if (typeof image === 'string') {\n      const img = new Image();\n      img.onload = logImage.bind(null, img, message, scale);\n      img.src = image;\n    }\n    const element = image.nodeName || '';\n    if (element.toLowerCase() === 'img') {\n      logImage(image, message, scale);\n    }\n    if (element.toLowerCase() === 'canvas') {\n      const img = new Image();\n      img.onload = logImage.bind(null, img, message, scale);\n      img.src = image.toDataURL();\n    }\n  },\n  deprecated(oldUsage, newUsage) {\n    log.warn(`luma.gl: \\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  },\n  group(priority, arg, {collapsed = false} = {}) {\n    if (priority <= log.priority) {\n      if (collapsed) {\n        console.groupCollapsed(`luma.gl: ${arg}`);\n      } else {\n        console.group(`luma.gl: ${arg}`);\n      }\n    }\n  },\n  groupEnd(priority, arg) {\n    if (priority <= log.priority) {\n      console.groupEnd(`luma.gl: ${arg}`);\n    }\n  }\n};\n\n// Inspired by https://github.com/hughsk/console-image (MIT license)\nfunction logImage(image, message, scale) {\n  const width = image.width * scale;\n  const height = image.height * scale;\n  const imageUrl = image.src.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n\n  console.log(`${message} %c+`, [\n    'font-size:1px;',\n    `padding:${Math.floor(height / 2)}px ${Math.floor(width / 2)}px;`,\n    `line-height:${height}px;`,\n    `background:url(${imageUrl});`,\n    `background-size:${width}px ${height}px;`,\n    'color:transparent;'\n  ].join(''));\n}\n\nfunction formatArrayValue(v, opts) {\n  const {maxElts = 16, size = 1} = opts;\n  let string = '[';\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += `,${(i % size === 0) ? ' ' : ''}`;\n    }\n    string += formatValue(v[i], opts);\n  }\n  const terminator = v.length > maxElts ? '...' : ']';\n  return `${string}${terminator}`;\n}\n\nexport function formatValue(v, opts = {}) {\n  const EPSILON = 1e-16;\n  const {isInteger = false} = opts;\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, opts);\n  }\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n  if (isInteger) {\n    return v.toFixed(0);\n  }\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    return v.toFixed(0);\n  }\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n\nexport default log;\n"]}