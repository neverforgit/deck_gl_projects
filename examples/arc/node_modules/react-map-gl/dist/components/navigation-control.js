'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autobind = require('../utils/autobind');

var _autobind2 = _interopRequireDefault(_autobind);

var _viewportMercatorProject = require('viewport-mercator-project');

var _mapState = require('../utils/map-state');

var _mapState2 = _interopRequireDefault(_mapState);

var _deprecateWarn = require('../utils/deprecate-warn');

var _deprecateWarn2 = _interopRequireDefault(_deprecateWarn);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  /**
    * `onViewportChange` callback is fired when the user interacted with the
    * map. The object passed to the callback contains `latitude`,
    * `longitude` and `zoom` and additional state information.
    */
  onViewportChange: _propTypes2.default.func.isRequired
};

var defaultProps = {
  onViewportChange: function onViewportChange() {}
};

var contextTypes = {
  viewport: _propTypes2.default.instanceOf(_viewportMercatorProject.PerspectiveMercatorViewport)
};

/*
 * PureComponent doesn't update when context changes, so
 * implementing our own shouldComponentUpdate here.
 */

var NavigationControl = function (_Component) {
  (0, _inherits3.default)(NavigationControl, _Component);

  function NavigationControl(props) {
    (0, _classCallCheck3.default)(this, NavigationControl);

    var _this = (0, _possibleConstructorReturn3.default)(this, (NavigationControl.__proto__ || (0, _getPrototypeOf2.default)(NavigationControl)).call(this, props));

    (0, _autobind2.default)(_this);
    // Check for deprecated props
    (0, _deprecateWarn2.default)(props);
    return _this;
  }

  (0, _createClass3.default)(NavigationControl, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return this.context.viewport.bearing !== nextContext.viewport.bearing;
    }
  }, {
    key: '_updateViewport',
    value: function _updateViewport(opts) {
      var viewport = this.context.viewport;

      var mapState = new _mapState2.default((0, _assign2.default)({}, viewport, opts));
      // TODO(deprecate): remove this check when `onChangeViewport` gets deprecated
      var onViewportChange = this.props.onChangeViewport || this.props.onViewportChange;
      onViewportChange(mapState.getViewportProps());
    }
  }, {
    key: '_onZoomIn',
    value: function _onZoomIn() {
      this._updateViewport({ zoom: this.context.viewport.zoom + 1 });
    }
  }, {
    key: '_onZoomOut',
    value: function _onZoomOut() {
      this._updateViewport({ zoom: this.context.viewport.zoom - 1 });
    }
  }, {
    key: '_onResetNorth',
    value: function _onResetNorth() {
      this._updateViewport({ bearing: 0 });
    }
  }, {
    key: '_renderCompass',
    value: function _renderCompass() {
      var bearing = this.context.viewport.bearing;

      return (0, _react.createElement)('span', {
        className: 'mapboxgl-ctrl-compass-arrow',
        style: { transform: 'rotate(' + bearing + 'deg)' }
      });
    }
  }, {
    key: '_renderButton',
    value: function _renderButton(type, label, callback, children) {
      return (0, _react.createElement)('button', {
        key: type,
        className: 'mapboxgl-ctrl-icon mapboxgl-ctrl-' + type,
        type: 'button',
        title: label,
        onClick: callback,
        children: children
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return (0, _react.createElement)('div', {
        className: 'mapboxgl-ctrl mapboxgl-ctrl-group'
      }, [this._renderButton('zoom-in', 'Zoom In', this._onZoomIn), this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut), this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())]);
    }
  }]);
  return NavigationControl;
}(_react.Component);

exports.default = NavigationControl;


NavigationControl.displayName = 'NavigationControl';
NavigationControl.propTypes = propTypes;
NavigationControl.defaultProps = defaultProps;
NavigationControl.contextTypes = contextTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL25hdmlnYXRpb24tY29udHJvbC5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJvblZpZXdwb3J0Q2hhbmdlIiwiZnVuYyIsImlzUmVxdWlyZWQiLCJkZWZhdWx0UHJvcHMiLCJjb250ZXh0VHlwZXMiLCJ2aWV3cG9ydCIsImluc3RhbmNlT2YiLCJOYXZpZ2F0aW9uQ29udHJvbCIsInByb3BzIiwibmV4dFByb3BzIiwibmV4dFN0YXRlIiwibmV4dENvbnRleHQiLCJjb250ZXh0IiwiYmVhcmluZyIsIm9wdHMiLCJtYXBTdGF0ZSIsIm9uQ2hhbmdlVmlld3BvcnQiLCJnZXRWaWV3cG9ydFByb3BzIiwiX3VwZGF0ZVZpZXdwb3J0Iiwiem9vbSIsImNsYXNzTmFtZSIsInN0eWxlIiwidHJhbnNmb3JtIiwidHlwZSIsImxhYmVsIiwiY2FsbGJhY2siLCJjaGlsZHJlbiIsImtleSIsInRpdGxlIiwib25DbGljayIsIl9yZW5kZXJCdXR0b24iLCJfb25ab29tSW4iLCJfb25ab29tT3V0IiwiX29uUmVzZXROb3J0aCIsIl9yZW5kZXJDb21wYXNzIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7QUFDQTs7OztBQUVBOzs7Ozs7QUFFQSxJQUFNQSxZQUFZO0FBQ2hCOzs7OztBQUtBQyxvQkFBa0Isb0JBQVVDLElBQVYsQ0FBZUM7QUFOakIsQ0FBbEI7O0FBU0EsSUFBTUMsZUFBZTtBQUNuQkgsb0JBQWtCLDRCQUFNLENBQUU7QUFEUCxDQUFyQjs7QUFJQSxJQUFNSSxlQUFlO0FBQ25CQyxZQUFVLG9CQUFVQyxVQUFWO0FBRFMsQ0FBckI7O0FBSUE7Ozs7O0lBSXFCQyxpQjs7O0FBRW5CLDZCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUEsNEpBQ1hBLEtBRFc7O0FBRWpCO0FBQ0E7QUFDQSxpQ0FBY0EsS0FBZDtBQUppQjtBQUtsQjs7OzswQ0FFcUJDLFMsRUFBV0MsUyxFQUFXQyxXLEVBQWE7QUFDdkQsYUFBTyxLQUFLQyxPQUFMLENBQWFQLFFBQWIsQ0FBc0JRLE9BQXRCLEtBQWtDRixZQUFZTixRQUFaLENBQXFCUSxPQUE5RDtBQUNEOzs7b0NBRWVDLEksRUFBTTtBQUFBLFVBQ2JULFFBRGEsR0FDRCxLQUFLTyxPQURKLENBQ2JQLFFBRGE7O0FBRXBCLFVBQU1VLFdBQVcsdUJBQWEsc0JBQWMsRUFBZCxFQUFrQlYsUUFBbEIsRUFBNEJTLElBQTVCLENBQWIsQ0FBakI7QUFDQTtBQUNBLFVBQU1kLG1CQUFtQixLQUFLUSxLQUFMLENBQVdRLGdCQUFYLElBQStCLEtBQUtSLEtBQUwsQ0FBV1IsZ0JBQW5FO0FBQ0FBLHVCQUFpQmUsU0FBU0UsZ0JBQVQsRUFBakI7QUFDRDs7O2dDQUVXO0FBQ1YsV0FBS0MsZUFBTCxDQUFxQixFQUFDQyxNQUFNLEtBQUtQLE9BQUwsQ0FBYVAsUUFBYixDQUFzQmMsSUFBdEIsR0FBNkIsQ0FBcEMsRUFBckI7QUFDRDs7O2lDQUVZO0FBQ1gsV0FBS0QsZUFBTCxDQUFxQixFQUFDQyxNQUFNLEtBQUtQLE9BQUwsQ0FBYVAsUUFBYixDQUFzQmMsSUFBdEIsR0FBNkIsQ0FBcEMsRUFBckI7QUFDRDs7O29DQUVlO0FBQ2QsV0FBS0QsZUFBTCxDQUFxQixFQUFDTCxTQUFTLENBQVYsRUFBckI7QUFDRDs7O3FDQUVnQjtBQUFBLFVBQ1JBLE9BRFEsR0FDRyxLQUFLRCxPQUFMLENBQWFQLFFBRGhCLENBQ1JRLE9BRFE7O0FBRWYsYUFBTywwQkFBYyxNQUFkLEVBQXNCO0FBQzNCTyxtQkFBVyw2QkFEZ0I7QUFFM0JDLGVBQU8sRUFBQ0MsdUJBQXFCVCxPQUFyQixTQUFEO0FBRm9CLE9BQXRCLENBQVA7QUFJRDs7O2tDQUVhVSxJLEVBQU1DLEssRUFBT0MsUSxFQUFVQyxRLEVBQVU7QUFDN0MsYUFBTywwQkFBYyxRQUFkLEVBQXdCO0FBQzdCQyxhQUFLSixJQUR3QjtBQUU3QkgseURBQStDRyxJQUZsQjtBQUc3QkEsY0FBTSxRQUh1QjtBQUk3QkssZUFBT0osS0FKc0I7QUFLN0JLLGlCQUFTSixRQUxvQjtBQU03QkM7QUFONkIsT0FBeEIsQ0FBUDtBQVFEOzs7NkJBRVE7QUFDUCxhQUFPLDBCQUFjLEtBQWQsRUFBcUI7QUFDMUJOLG1CQUFXO0FBRGUsT0FBckIsRUFFSixDQUNELEtBQUtVLGFBQUwsQ0FBbUIsU0FBbkIsRUFBOEIsU0FBOUIsRUFBeUMsS0FBS0MsU0FBOUMsQ0FEQyxFQUVELEtBQUtELGFBQUwsQ0FBbUIsVUFBbkIsRUFBK0IsVUFBL0IsRUFBMkMsS0FBS0UsVUFBaEQsQ0FGQyxFQUdELEtBQUtGLGFBQUwsQ0FBbUIsU0FBbkIsRUFBOEIsYUFBOUIsRUFBNkMsS0FBS0csYUFBbEQsRUFBaUUsS0FBS0MsY0FBTCxFQUFqRSxDQUhDLENBRkksQ0FBUDtBQU9EOzs7OztrQkE1RGtCM0IsaUI7OztBQStEckJBLGtCQUFrQjRCLFdBQWxCLEdBQWdDLG1CQUFoQztBQUNBNUIsa0JBQWtCUixTQUFsQixHQUE4QkEsU0FBOUI7QUFDQVEsa0JBQWtCSixZQUFsQixHQUFpQ0EsWUFBakM7QUFDQUksa0JBQWtCSCxZQUFsQixHQUFpQ0EsWUFBakMiLCJmaWxlIjoibmF2aWdhdGlvbi1jb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIGNyZWF0ZUVsZW1lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgYXV0b2JpbmQgZnJvbSAnLi4vdXRpbHMvYXV0b2JpbmQnO1xuXG5pbXBvcnQge1BlcnNwZWN0aXZlTWVyY2F0b3JWaWV3cG9ydH0gZnJvbSAndmlld3BvcnQtbWVyY2F0b3ItcHJvamVjdCc7XG5pbXBvcnQgTWFwU3RhdGUgZnJvbSAnLi4vdXRpbHMvbWFwLXN0YXRlJztcblxuaW1wb3J0IGRlcHJlY2F0ZVdhcm4gZnJvbSAnLi4vdXRpbHMvZGVwcmVjYXRlLXdhcm4nO1xuXG5jb25zdCBwcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgICogYG9uVmlld3BvcnRDaGFuZ2VgIGNhbGxiYWNrIGlzIGZpcmVkIHdoZW4gdGhlIHVzZXIgaW50ZXJhY3RlZCB3aXRoIHRoZVxuICAgICogbWFwLiBUaGUgb2JqZWN0IHBhc3NlZCB0byB0aGUgY2FsbGJhY2sgY29udGFpbnMgYGxhdGl0dWRlYCxcbiAgICAqIGBsb25naXR1ZGVgIGFuZCBgem9vbWAgYW5kIGFkZGl0aW9uYWwgc3RhdGUgaW5mb3JtYXRpb24uXG4gICAgKi9cbiAgb25WaWV3cG9ydENoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICBvblZpZXdwb3J0Q2hhbmdlOiAoKSA9PiB7fVxufTtcblxuY29uc3QgY29udGV4dFR5cGVzID0ge1xuICB2aWV3cG9ydDogUHJvcFR5cGVzLmluc3RhbmNlT2YoUGVyc3BlY3RpdmVNZXJjYXRvclZpZXdwb3J0KVxufTtcblxuLypcbiAqIFB1cmVDb21wb25lbnQgZG9lc24ndCB1cGRhdGUgd2hlbiBjb250ZXh0IGNoYW5nZXMsIHNvXG4gKiBpbXBsZW1lbnRpbmcgb3VyIG93biBzaG91bGRDb21wb25lbnRVcGRhdGUgaGVyZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmF2aWdhdGlvbkNvbnRyb2wgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIGF1dG9iaW5kKHRoaXMpO1xuICAgIC8vIENoZWNrIGZvciBkZXByZWNhdGVkIHByb3BzXG4gICAgZGVwcmVjYXRlV2Fybihwcm9wcyk7XG4gIH1cblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzLCBuZXh0U3RhdGUsIG5leHRDb250ZXh0KSB7XG4gICAgcmV0dXJuIHRoaXMuY29udGV4dC52aWV3cG9ydC5iZWFyaW5nICE9PSBuZXh0Q29udGV4dC52aWV3cG9ydC5iZWFyaW5nO1xuICB9XG5cbiAgX3VwZGF0ZVZpZXdwb3J0KG9wdHMpIHtcbiAgICBjb25zdCB7dmlld3BvcnR9ID0gdGhpcy5jb250ZXh0O1xuICAgIGNvbnN0IG1hcFN0YXRlID0gbmV3IE1hcFN0YXRlKE9iamVjdC5hc3NpZ24oe30sIHZpZXdwb3J0LCBvcHRzKSk7XG4gICAgLy8gVE9ETyhkZXByZWNhdGUpOiByZW1vdmUgdGhpcyBjaGVjayB3aGVuIGBvbkNoYW5nZVZpZXdwb3J0YCBnZXRzIGRlcHJlY2F0ZWRcbiAgICBjb25zdCBvblZpZXdwb3J0Q2hhbmdlID0gdGhpcy5wcm9wcy5vbkNoYW5nZVZpZXdwb3J0IHx8IHRoaXMucHJvcHMub25WaWV3cG9ydENoYW5nZTtcbiAgICBvblZpZXdwb3J0Q2hhbmdlKG1hcFN0YXRlLmdldFZpZXdwb3J0UHJvcHMoKSk7XG4gIH1cblxuICBfb25ab29tSW4oKSB7XG4gICAgdGhpcy5fdXBkYXRlVmlld3BvcnQoe3pvb206IHRoaXMuY29udGV4dC52aWV3cG9ydC56b29tICsgMX0pO1xuICB9XG5cbiAgX29uWm9vbU91dCgpIHtcbiAgICB0aGlzLl91cGRhdGVWaWV3cG9ydCh7em9vbTogdGhpcy5jb250ZXh0LnZpZXdwb3J0Lnpvb20gLSAxfSk7XG4gIH1cblxuICBfb25SZXNldE5vcnRoKCkge1xuICAgIHRoaXMuX3VwZGF0ZVZpZXdwb3J0KHtiZWFyaW5nOiAwfSk7XG4gIH1cblxuICBfcmVuZGVyQ29tcGFzcygpIHtcbiAgICBjb25zdCB7YmVhcmluZ30gPSB0aGlzLmNvbnRleHQudmlld3BvcnQ7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7XG4gICAgICBjbGFzc05hbWU6ICdtYXBib3hnbC1jdHJsLWNvbXBhc3MtYXJyb3cnLFxuICAgICAgc3R5bGU6IHt0cmFuc2Zvcm06IGByb3RhdGUoJHtiZWFyaW5nfWRlZylgfVxuICAgIH0pO1xuICB9XG5cbiAgX3JlbmRlckJ1dHRvbih0eXBlLCBsYWJlbCwgY2FsbGJhY2ssIGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicsIHtcbiAgICAgIGtleTogdHlwZSxcbiAgICAgIGNsYXNzTmFtZTogYG1hcGJveGdsLWN0cmwtaWNvbiBtYXBib3hnbC1jdHJsLSR7dHlwZX1gLFxuICAgICAgdHlwZTogJ2J1dHRvbicsXG4gICAgICB0aXRsZTogbGFiZWwsXG4gICAgICBvbkNsaWNrOiBjYWxsYmFjayxcbiAgICAgIGNoaWxkcmVuXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgIGNsYXNzTmFtZTogJ21hcGJveGdsLWN0cmwgbWFwYm94Z2wtY3RybC1ncm91cCdcbiAgICB9LCBbXG4gICAgICB0aGlzLl9yZW5kZXJCdXR0b24oJ3pvb20taW4nLCAnWm9vbSBJbicsIHRoaXMuX29uWm9vbUluKSxcbiAgICAgIHRoaXMuX3JlbmRlckJ1dHRvbignem9vbS1vdXQnLCAnWm9vbSBPdXQnLCB0aGlzLl9vblpvb21PdXQpLFxuICAgICAgdGhpcy5fcmVuZGVyQnV0dG9uKCdjb21wYXNzJywgJ1Jlc2V0IE5vcnRoJywgdGhpcy5fb25SZXNldE5vcnRoLCB0aGlzLl9yZW5kZXJDb21wYXNzKCkpXG4gICAgXSk7XG4gIH1cbn1cblxuTmF2aWdhdGlvbkNvbnRyb2wuZGlzcGxheU5hbWUgPSAnTmF2aWdhdGlvbkNvbnRyb2wnO1xuTmF2aWdhdGlvbkNvbnRyb2wucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuTmF2aWdhdGlvbkNvbnRyb2wuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuTmF2aWdhdGlvbkNvbnRyb2wuY29udGV4dFR5cGVzID0gY29udGV4dFR5cGVzO1xuIl19